import os
import uuid

from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import aiogram.utils.markdown as fmt
from aiogram.types import InputFile, ParseMode

import db, keyboard
from aiogram.dispatcher import FSMContext
from fsm import Users, Application, Update
import re


API_TOKEN = '5998330752:AAGS3LqbrL0rMO4Pgw3V-T-tpE_0fzq5N2c'

bot = Bot(token=API_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot, storage=MemoryStorage())
tmp = {}


@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message, state: FSMContext):
    exist_user = db.check_existing(message.chat.id)
    if not exist_user:
        await message.answer(
            fmt.hbold('‚òÄ–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫') + ', –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. '
                     '–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º, –ø—Ä–∏—à–ª–∏—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –í–∞—à–µ ' + fmt.hbold('–ò–º—è') + ' –∏ ' + fmt.hbold('–§–∞–º–∏–ª–∏—é'))
        user_id = message.from_user.id
        await Users.Name.set()
    else:
       await message.answer(fmt.hbold('‚úà–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ') + fmt.hitalic('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞ –£–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ "–£–≠–†-–Æ–ì"') +
                            '. –ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–æ–º–æ–º. –ü—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ '
                            + '<b><i>–º–µ–Ω—é </i></b>' + '—á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞:', reply_markup=keyboard.start_m)


@dp.message_handler(state=Users.Name)
async def phnum(message: types.Message, state: FSMContext):
    name_input = message.text
    name_surname = name_input.split()

    if len(name_surname) == 2:
        name, surname = name_surname
        if re.match(r'^[–ê-–Ø–Å–∞-—è—ë]+\s[–ê-–Ø–Å–∞-—è—ë]+$', name_input):
            name = name.capitalize()
            surname = surname.capitalize()
            name_surname = name + ' ' + surname
            await state.update_data(name=name_surname)
            await message.answer('üìû–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à' + fmt.hbold(' –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞') + ' —á–µ—Ä–µ–∑ ' + fmt.hbold(
                '+7') + ' —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º:')
            await Users.Phnum.set()
        else:
            await message.answer(
                '‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏. –í–≤–µ–¥–∏—Ç–µ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–∏—Ä–∏–ª–ª–∏—Ü—É –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º.')
    else:
        await message.answer('‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º.')


@dp.message_handler(state=Users.Phnum)
async def addphnum(message: types.Message, state: FSMContext):
    phnum = message.text
    if re.match(r'^\+7\d{10}$', phnum):
        await state.update_data(phnum=phnum)
        data = await state.get_data()
        db.update_user(message.chat.id, name=data['name'], phnum=data['phnum'])

        await state.finish()

        await message.answer('‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
    else:
        await message.answer('‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX.')


@dp.message_handler(text='üìõ–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
async def define_timezone_handler(message: types.Message):
    await message.answer('üìõüëáüìõ<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ –£–ö:</i>', reply_markup=keyboard.application_m)


@dp.callback_query_handler(lambda c: c.data == 'leave_app')
async def leave_application_handler(callback: types.CallbackQuery):
    await callback.message.answer('<b><i>–®–∞–≥ 1/3 üìù </i></b>' + '–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø—Ä–æ–±–ª–µ–º—ã (—É–ª–∏—Ü—É, –Ω–æ–º–µ—Ä –¥–æ–º–∞, –ø–æ–¥—ä–µ–∑–¥, —ç—Ç–∞–∂ –∏ –∫–≤–∞—Ä—Ç–∏—Ä—É) –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:', reply_markup=keyboard.skip_m)
    await Application.Location.set()


@dp.message_handler(state=Application.Location)
async def process_location_step(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['location'] = message.text
    await Application.Photo.set()
    await message.answer('–®–∞–≥ 2/3 üì∑ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ –∫ —Å–≤–æ–µ–π –∑–∞—è–≤–∫–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:', reply_markup=keyboard.skip_m)


@dp.message_handler(content_types=['photo', 'video'], state=Application.Photo)
async def process_media_step(message: types.Message, state: FSMContext):
    if message.content_type not in ['photo', 'video']:
        await message.answer('‚õîüìõ–í –¥–∞–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é</b> –∏–ª–∏ <b>–≤–∏–¥–µ–æ</b> –≤ –≤–∏–¥–µ –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:')
        return

    file_id = message.photo[-1].file_id if message.content_type == 'photo' else message.video.file_id
    file_info = await bot.get_file(file_id)
    file_path = file_info.file_path
    downloaded_file = await bot.download_file(file_path)
    file_extension = os.path.splitext(file_path)[-1]
    unique_filename = f'{uuid.uuid4()}{file_extension}'
    save_path = os.path.join(f'Media', unique_filename)

    with open(save_path, 'wb') as f:
        f.write(downloaded_file.read())

    async with state.proxy() as data:
        data['photo'] = save_path

    await Application.Reason.set()

    await message.answer('–®–∞–≥ 3/3 üìù –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è:', reply_markup=keyboard.skip_m)


@dp.message_handler(state=Application.Reason)
async def process_reason_step(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['reason'] = message.text
        chat_id = message.chat.id
        location = data.get('location', 'Unknown Location')
        photo = data.get('photo')
        reason = data.get('reason', 'No reason provided')
        user_info = db.get_user_info(chat_id)
        name = user_info['name']
        num = user_info['phnum']
        user = await bot.get_chat_member(chat_id, message.from_user.id)
        user_username = user.user.username
        db.add_application(chat_id, location, photo, reason)

        group_chat_id = -1001973593367
        application_info = f"‚õî–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∂–∞–ª–æ–±a:\n@{user_username}\n<b>–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è: </b>{name}\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {num}\n<b>–ê–¥—Ä–µ—Å:</b> {location}\n<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {reason}"

        if photo:
            input_photo = InputFile(photo)
            await bot.send_photo(group_chat_id, input_photo, caption=application_info, parse_mode='HTML')
        else:
            await bot.send_message(group_chat_id, application_info, parse_mode='HTML')

        await state.finish()
        await message.answer('<b>‚úÖ–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.</b>' + '<i> –°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!</i>')


@dp.callback_query_handler(lambda c: c.data == 'skip', state=Application.Location)
async def skip_location_handler(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['location'] = None
    await Application.Photo.set()
    await callback.message.answer('–®–∞–≥ 2/3 üì∑ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ –∫ —Å–≤–æ–µ–π –∑–∞—è–≤–∫–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:', reply_markup=keyboard.skip_m)


@dp.callback_query_handler(lambda c: c.data == 'skip', state=Application.Photo)
async def skip_photo_handler(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['photo'] = None
    await Application.Reason.set()
    await callback.message.answer('–®–∞–≥ 3/3 üìù –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è—Ö:', reply_markup=keyboard.skip_m)


@dp.callback_query_handler(lambda c: c.data == 'back', state='*')
async def go_back(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥.')
    async with state.proxy() as data:
        if 'photo' in data:
            del data['photo']
        current_state = await state.get_state()
        if current_state == Application.Reason.state:
            await Application.Photo.set()
            await callback.message.answer('–®–∞–≥ 2/3 üì∑ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ –∫ —Å–≤–æ–µ–π –∑–∞—è–≤–∫–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:', reply_markup=keyboard.skip_m)
        elif current_state == Application.Photo.state:
            await Application.Location.set()
            await callback.message.answer('<b><i>–®–∞–≥ 1/3 üìù </i></b>' + '–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø—Ä–æ–±–ª–µ–º—ã (—É–ª–∏—Ü—É, –Ω–æ–º–µ—Ä –¥–æ–º–∞, –ø–æ–¥—ä–µ–∑–¥, —ç—Ç–∞–∂ –∏ –∫–≤–∞—Ä—Ç–∏—Ä—É) –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:', reply_markup=keyboard.skip_m)
        elif current_state == Application.Suggestion.state:
            await callback.message.answer('üìõüëáüìõ<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ –£–ö:</i>', reply_markup=keyboard.application_m)
            await state.finish()
        else:
            await callback.message.answer(
            fmt.hbold('‚úà–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ') + fmt.hitalic('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞ –£–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ "–£–≠–†-–Æ–ì"') +
            '. –ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–æ–º–æ–º. –ü—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ '
            + '<b><i>–º–µ–Ω—é </i></b>' + '—á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞:', reply_markup=keyboard.start_m)


@dp.callback_query_handler(lambda c: c.data == 'share', state='*')
async def share_suggestion(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer('<b>–†–∞—Å–ø–∏—à–∏—Ç–µ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è—Ö: (–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å)</b>',reply_markup=keyboard.back_markup)
    await state.update_data(suggestion=True)
    await Application.Suggestion.set()


@dp.message_handler(state=Application.Suggestion, content_types=['text', 'photo'])
async def process_suggestion_step(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        suggestion = data.get('suggestion', False)
        if suggestion:
            if message.photo:
                suggestion_text = message.caption  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç –∏–∑ caption —Ñ–æ—Ç–æ
                photo = message.photo[-1].file_id

                chat_id = message.chat.id
                user_info = db.get_user_info(chat_id)
                name = user_info['name']
                num = user_info['phnum']
                user = await bot.get_chat_member(chat_id, message.from_user.id)
                user_username = user.user.username
                group_chat_id = -1001973593367
                suggestion_info = f"üîî–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n@{user_username}\n<b>–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è: </b>{name}\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {num}\n<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> {suggestion_text}"

                file_info = await bot.get_file(photo)
                file_path = file_info.file_path
                downloaded_file = await bot.download_file(file_path)
                file_extension = os.path.splitext(file_path)[-1]
                unique_filename = f'{uuid.uuid4()}{file_extension}'
                save_path = os.path.join(f'Media', unique_filename)

                with open(save_path, 'wb') as f:
                    f.write(downloaded_file.read())

                input_photo = InputFile(save_path)
                await bot.send_photo(group_chat_id, input_photo, caption=suggestion_info, parse_mode='HTML')
            else:
                suggestion_text = message.text

                chat_id = message.chat.id
                user_info = db.get_user_info(chat_id)
                name = user_info['name']
                num = user_info['phnum']
                user = await bot.get_chat_member(chat_id, message.from_user.id)
                user_username = user.user.username
                group_chat_id = -1001973593367
                suggestion_info = f"üîî–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n@{user_username}\n<b>–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è: </b>{name}\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {num}\n<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> {suggestion_text}"

                await bot.send_message(group_chat_id, suggestion_info, parse_mode='HTML')

            await message.answer('‚úÖüí°<b>–ò–¥–µ—è –ø—Ä–∏–Ω—è—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. </b><i>–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!</i>')
            await state.finish()
        else:
            await message.answer('‚õîüìõ–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç')
            await state.finish()


@dp.message_handler(text='‚òé–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã')
async def send_contacts(message: types.Message):
    contacts_text = """
–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è:    
<b>–î–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∞—è —Å–ª—É–∂–±–∞ 000 ¬´–£–≠–†-–Æ–ì¬ª</b>
+7 4722 35-50-06

<b>–ò–Ω–∂–µ–Ω–µ—Ä—ã –û–û–û ¬´–£–≠–†-–Æ–ì¬ª</b>
+7 920 566-28-86

<b>–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è –û–û–û ¬´–£–≠–†-–Æ–ì¬ª</b>
+7 4722 35-50-06

–ë–µ–ª–≥–æ—Ä–æ–¥, –°–≤—è—Ç–æ-–¢—Ä–æ–∏—Ü–∫–∏–π –±-—Ä. –¥. 15, –ø–æ–¥—ä–µ–∑–¥ No 1

<u>–¢–µ–ª–µ—Ñ–æ–Ω—ã –¥–ª—è –û–¢–ö–†–´–¢–ò–Ø –í–æ—Ä–æ—Ç –∏ —à–ª–∞–≥–±–∞—É–º–∞:</u>
<b>–®–ª–∞–≥–±–∞—É–º ¬´–ù–∞–±–µ—Ä–µ–∂–Ω–∞—è¬ª</b>
+7 920 554-87-74

<b>–í–æ—Ä–æ—Ç–∞ ¬´–•–∞—Ä—å–∫–æ–≤—Å–∫–∏–µ¬ª</b>
+7 920 554-87-40

<b>–í–æ—Ä–æ—Ç–∞ ¬´–ú–æ—Å—Ç¬ª</b>
+7 920 554-64-06

<b>–ö–∞–ª–∏—Ç–∫–∞ 1 ¬´–ú–û–°–¢¬ª</b>
+7 920 554-42-10

<b>–ö–∞–ª–∏—Ç–∫–∞ 2 ¬´–ú–æ—Å—Ç¬ª</b>
+7 920 554-89-04

<b>–ö–∞–ª–∏—Ç–∫–∞ 3 ¬´–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è¬ª</b>
+7 920 554-87-39

<b>–ö–∞–ª–∏—Ç–∫–∞ 4 ¬´–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è¬ª</b>
+7 920 554-89-02

<b>–û—Ö—Ä–∞–Ω–∞</b>
+7 915 57-91-457

<b>–£—á–∞—Å—Ç–∫–æ–≤—ã–π</b>
–ö—É–ª–µ–Ω—Ü–æ–≤–∞ –ú–∞—Ä–∏–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞:
+7 999 421-53-72"""

    await message.answer(contacts_text, parse_mode='HTML')


@dp.message_handler(text='‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def settings(message: types.Message):
    await message.answer('‚öô–¢—É—Ç –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å <b>–ò–º—è</b> –∏ <b>–§–∞–º–∏–ª–∏—é</b> –≤ –ë–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –í–∞—à <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>, '
                         '–µ—Å–ª–∏ –í—ã –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤–≤–æ–¥–∏–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>:', reply_markup=keyboard.settings)


@dp.callback_query_handler(lambda c: c.data == '—Åh_name')
async def change_name(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer('üõ†<i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é, —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ :</i>')
    await Update.Name.set()


@dp.callback_query_handler(lambda c: c.data == '—Åh_num')
async def change_number(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer('üõ†<i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ :</i>')
    await Update.Phnum.set()


@dp.message_handler(state=Update.Name)
async def set_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        chat_id = message.chat.id
        new_name = message.text
        old_data = await state.get_data()
        db.update_user(chat_id, name=old_data.get('name'), phnum=old_data.get('phnum'))
        db.update_user(chat_id, name=new_name, phnum=old_data.get('phnum'))
        await state.finish()
        await message.answer('üõ†‚úÖüõ†–ù–∞—Å—Ç—Ä–æ–π–∫–∏ <b>–∏–º–µ–Ω–∏</b> —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!')


@dp.message_handler(state=Update.Phnum)
async def set_number(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        chat_id = message.chat.id
        new_number = message.text
        old_data = await state.get_data()
        db.update_user(chat_id, name=old_data.get('name'), phnum=old_data.get('phnum'))
        db.update_user(chat_id, name=old_data.get('name'), phnum=new_number)
        await state.finish()
        await message.answer('üõ†‚úÖüõ†–ù–∞—Å—Ç—Ä–æ–π–∫–∏ <b>–Ω–æ–º–µ—Ä–∞</b> —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!')

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)